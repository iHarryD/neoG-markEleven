{"version":3,"sources":["button-bg.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","dateOfBirth","setDateOfBirth","luckyNumber","setLuckyNumber","output","setOutput","className","htmlFor","required","onChange","event","target","value","replaceAll","type","name","id","placeholder","onClick","preventDefault","sumOfDateOfBirth","index","length","Number","charAt","console","log","algoOfLuck","src","buttonBg","alt","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,G,MAAA,IAA0B,uC,OCiG1BA,MA7Ff,WACE,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4BJ,mBAAS,0BAArC,mBAAOK,EAAP,KAAeC,EAAf,KAsBA,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,4DAEF,iCACE,iCACE,uBAAOC,QAAQ,MAAf,6CACA,uBACEC,UAAQ,EACRC,SAAU,SAACC,GACTT,EAAeS,EAAMC,OAAOC,MAAMC,WAAW,IAAK,MAEpDC,KAAK,OACLC,KAAK,MACLC,GAAG,QAEL,uBAAOT,QAAQ,eAAf,4CACA,uBACEE,SAAU,SAACC,GACTP,EAAeO,EAAMC,OAAOC,QAE9BE,KAAK,SACLC,KAAK,eACLC,GAAG,eACHC,YAAY,MAEd,wBACEC,QAAS,SAACR,GACRA,EAAMS,iBA5ClB,WAEE,IADA,IAAIC,EAAmB,EACdC,EAAQ,EAAGA,EAAQrB,EAAYsB,OAAQD,IAC9CD,GAAsCG,OAAOvB,EAAYwB,OAAOH,IAElED,EAAmBG,OAAOH,GAC1BK,QAAQC,IAAIN,GACQ,IAAhBpB,IACOoB,EAAmBG,OAAOrB,KAAiB,EACpDG,EAbF,8EAeEA,EAbF,4DA+CUsB,IAEFb,KAAK,SALP,SAOE,qBAAKc,IAAKC,EAAUC,IAAI,UAG5B,qBAAKxB,UAAU,aAAf,SAA6BF,OAE/B,mCACE,mIAIA,qBAAIY,GAAG,mBAAP,UACE,6BACE,mBAAGV,UAAU,qBAAqByB,KAAK,6BAAvC,sBAIF,6BACE,mBACEzB,UAAU,qBACVyB,KAAK,wDAFP,2BAQJ,oBAAGf,GAAG,iBAAN,+BACqB,IACnB,mBAAGe,KAAK,gDAAR,6BC9EKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.574daf84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/button-bg.ae269b74.png\";","import \"./App.css\";\nimport { useState } from \"react\";\nimport buttonBg from \"../src/button-bg.png\";\n\nfunction App() {\n  const [dateOfBirth, setDateOfBirth] = useState(0);\n  const [luckyNumber, setLuckyNumber] = useState(\"\");\n  const [output, setOutput] = useState(\"Fill the input fields.\");\n\n  const luckyMessage =\n    \"Congratulations! Your birthdate is lucky. One more reason to celebrate it.\";\n  const unLuckyMessage =\n    \"Sorry, your lucky number doesn't seem to be that lucky.\";\n\n  function algoOfLuck() {\n    let sumOfDateOfBirth = 0;\n    for (let index = 0; index < dateOfBirth.length; index++) {\n      sumOfDateOfBirth = sumOfDateOfBirth + Number(dateOfBirth.charAt(index));\n    }\n    sumOfDateOfBirth = Number(sumOfDateOfBirth);\n    console.log(sumOfDateOfBirth);\n    if (dateOfBirth === 0) {\n    } else if (sumOfDateOfBirth % Number(luckyNumber) === 0) {\n      setOutput(luckyMessage);\n    } else {\n      setOutput(unLuckyMessage);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Is Your Birthdate Lucky?</h1>\n      </header>\n      <main>\n        <form>\n          <label htmlFor=\"dob\">Enter your date of birth here: </label>\n          <input\n            required\n            onChange={(event) => {\n              setDateOfBirth(event.target.value.replaceAll(\"-\", \"\"));\n            }}\n            type=\"date\"\n            name=\"dob\"\n            id=\"dob\"\n          />\n          <label htmlFor=\"lucky-number\">Enter your lucky number here: </label>\n          <input\n            onChange={(event) => {\n              setLuckyNumber(event.target.value);\n            }}\n            type=\"number\"\n            name=\"lucky-number\"\n            id=\"lucky-number\"\n            placeholder=\"0\"\n          />\n          <button\n            onClick={(event) => {\n              event.preventDefault();\n              algoOfLuck();\n            }}\n            type=\"submit\"\n          >\n            <img src={buttonBg} alt=\"\" />\n          </button>\n        </form>\n        <div className=\"output-div\">{output}</div>\n      </main>\n      <footer>\n        <span>\n          Unfortunately, I'm too broke to buy a server and save your birthdates\n          to send you 12 am wishes.\n        </span>\n        <ul id=\"social-media-tab\">\n          <li>\n            <a className=\"social-media-links\" href=\"https://github.com/iHarryD\">\n              GitHub\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"social-media-links\"\n              href=\"https://www.linkedin.com/in/prashant-kumar-a97251195/\"\n            >\n              LinkedIn\n            </a>\n          </li>\n        </ul>\n        <p id=\"portfolio-link\">\n          Website created by{\" \"}\n          <a href=\"https://iharryd.github.io/personal-portfolio/\">Harry</a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}